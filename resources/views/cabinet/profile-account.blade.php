@extends('cabinet/layouts/profile')

@section('cabinet-vendor-script')
  <script src="{{ mix('assets/libs/FullCalendar/dist/index.global.min.js') }}"></script>
  <script src="{{ mix('assets/libs/moments/moments.js') }}"></script>
@endsection
@php
    $month = ["–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å", "–ú–∞–π", "–ò—é–Ω—å", "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç", "–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å"];
    // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü –≤ –≤–∏–¥–µ —á–∏—Å–ª–∞
    $monthNumber = date('m');
    // –£–≤–µ–ª–∏—á–∏—Ç—å –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞ –Ω–∞ 1
    $nextMonthNumber = $monthNumber == 12 ? 1 : $monthNumber + 1;
    // –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞ –ø–æ –Ω–æ–º–µ—Ä—É
    $nextMonthName = $month[$nextMonthNumber - 1];
@endphp

@section('content-cabinet')

  <style>
    #contextMenu {
      position: absolute;
      display: none;
      z-index: 2;
    }

    #contextMenu .dropdown-menu {
      border: none;
    }

    .fc-event-main-frame {
      flex-wrap: wrap;
    }
  </style>


  <div id="contextMenu" class="dropdown clearfix"></div>

  <div class="card mb-2">
    <div class="card-header pb-2">
      <h5><i class='bx bx-timer text-primary fs-3'></i> –†–∞–±–æ—á–∏–µ –Ω–æ—Ä–º—ã –∑–∞ {{$nextMonthName}}
        <script>document.write(new Date().getFullYear())</script>
      </h5>
    </div>
    <div class="card-body d-flex justify-content-between flex-wrap">

      <div class="col-12 col-sm-3  p-2 d-flex flex-column align-items-center justify-content-between">
        <div class="mb-2">
          –ù–æ—Ä–º–∞ –≤—ã—Ä–∞–±–æ—Ç–∫–∏ —á–∞—Å–æ–≤ –≤ –º–µ—Å—è—Ü:
        </div>
        <div>
          {{substr(Auth::user()->workNorm['–ù–æ—Ä–º–∞–ß–∞—Å–æ–≤'], 0, strlen(Auth::user()->workNorm['–ù–æ—Ä–º–∞–ß–∞—Å–æ–≤']) - 3)}}
        </div>
      </div>
      <div class="vr my-2 d-none d-sm-block"></div>

      <div class="col-12 col-sm-3 p-2 d-flex flex-column align-items-center justify-content-between">
        <div class="mb-2">
          –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π:
        </div>
        <div>{{Auth::user()->workNorm['–ú–∏–Ω–ö–æ–ª–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π']}}</div>
      </div>

      <div class="vr my-2  d-none d-sm-block"></div>

      <div class="col-12 col-sm-3  p-2 d-flex flex-column align-items-center justify-content-between">
        <div class="mb-2"> –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π:</div>
        <div>{{Auth::user()->workNorm['–ú–∞–∫—Å–ö–æ–ª–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π']}}</div>
      </div>

    </div>
  </div>

  <div class="card mb-2">
    <div class="card-body p-2">
      <div class="alert alert-warning m-0" role="alert">
        <h6 class="alert-heading mb-1"><i class='bx bx-info-square fs-3'></i> –í–Ω–∏–º–∞–Ω–∏–µ!</h6>
        <ul>
          <li>–ñ–µ–ª–∞–µ–º—ã–π –≥—Ä–∞—Ñ–∏–∫, —è–≤–ª—è–µ—Ç—Å—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∏—Å—Ö–æ–¥—è –∏—Ö –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –≤–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π
            –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã.
          </li>
          <li>–ï—Å–ª–∏ –∂–µ–ª–∞–µ–º—ã–π –≥—Ä–∞—Ñ–∏–∫ –Ω–µ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω —Å–∏—Å—Ç–µ–º–∞ —Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –≤–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º
            —Ä–µ–∂–∏–º–µ.
          </li>
          <li>–í–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã –º–æ–∂–µ—Ç –Ω–µ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∂–µ–ª–∞–µ–º—ã–º.</li>
        </ul>
      </div>
    </div>
  </div>

  <div class="card mb-4">
    <div class="card-header d-flex justify-content-between">
      <h5 class="mb-1"><i class='bx bxs-calendar me-1 text-primary fs-3'></i>–ñ–µ–ª–∞–µ–º—ã–π –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã</h5>
      <h6>–ó–∞–ø–æ–ª–Ω–µ–Ω–æ: <span id="calckWorkHours">0</span> –∏–∑ <span
          id="normWorkHours">{{substr(Auth::user()->workNorm['–ù–æ—Ä–º–∞–ß–∞—Å–æ–≤'], 0, strlen(Auth::user()->workNorm['–ù–æ—Ä–º–∞–ß–∞—Å–æ–≤']) - 3)}}</span>
      </h6>
    </div>

    <div class="card-body">
      <div id="calendar-alert" class="alert alert-danger m-0 mb-2" role="alert" style="display: none">
        <h6 class="alert-heading mb-1"><i class='bx bx-info-square fs-3'></i> –î–æ–ø—É—â–µ–Ω—ã –æ—à–∏–±–∫–∏!</h6>
        <ul id="calendar-alert-list">
        </ul>
      </div>
      <div id="calendar-alert-save-success" class="alert alert-success m-0 mb-2" role="alert" style="display: none">
        <h6 class="alert-heading mb-1"><i class='bx bx-check fs-3'></i> –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ</h6>
        <ul id="calendar-alert-list">
          –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω!
        </ul>
      </div>


      <div id="calendar"></div>
    </div>

  </div>


  <!-- ADD EVENT MODAL -->
  <div class="modal fade" id="newEventModal" tabindex="-1" aria-labelledby="edit_notification" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title mb-1"><i class='bx bx-bell-plus me-1 text-primary fs-3'></i>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
          </h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <form id="addEventForm">
          <div class="modal-body">
            <div class="row">
              <div class="col-xs-12">
                <label class="col-xs-4" for="starts-at">–í—ã–±–µ—Ä–µ—Ç–µ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è:</label>
                <div>
                  <select class="form-control" id="workTimeSelect" required>
                    @foreach($workScheduleTypes as $type)
                      <option value="{{$type['–ö–æ–¥']}}" data-info="{{json_encode($type)}}">
                        <div>
                          {{$type['–ù–æ—á–Ω–∞—è'] ? 'üåô' : '‚òÄÔ∏è'}}
                        </div>
                        <div>
                          –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {{substr($type['–í—Ä–µ–º—è–ù–∞—á–∞–ª–∞'], 0, strlen($type['–í—Ä–µ–º—è–ù–∞—á–∞–ª–∞']) - 3)}} - {{substr($type['–í—Ä–µ–º—è–û–∫–æ–Ω—á–∞–Ω–∏—è'], 0, strlen($type['–í—Ä–µ–º—è–û–∫–æ–Ω—á–∞–Ω–∏—è']) - 3)}}
                        </div>
                        <div>
                          –ü–µ—Ä–µ—Ä—ã–≤: {{substr($type['–ü–µ—Ä–µ—Ä—ã–≤'], 0, strlen($type['–ü–µ—Ä–µ—Ä—ã–≤']) - 3)}}
                        </div>
                      </option>
                    @endforeach
                  </select>
                </div>
              </div>
            </div>


          </div>
          <div class="modal-footer">
            <div class="d-flex justify-content-end">
              <button class="btn btn-primary" type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>



  <!-- EDIT EVENT MODAL -->


  <div class="modal fade" id="editEventModal" tabindex="-1" aria-labelledby="edit_notification" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title mb-1"><i class='bx bx-bell-plus me-1 text-primary fs-3'></i>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
          </h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <form id="editEventForm">
          <div class="modal-body">
            <div class="row">
              <div class="col-xs-12">
                <label class="col-xs-4" for="starts-at">–í—ã–±–µ—Ä–µ—Ç–µ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è:</label>
                <div>
                  <select class="form-control" id="workTimeSelect-edit" required>
                    @foreach($workScheduleTypes as $type)
                      <option value="{{$type['–ö–æ–¥']}}" data-info="{{json_encode($type)}}">
                        <div>
                          {{$type['–ù–æ—á–Ω–∞—è'] ? 'üåô' : '‚òÄÔ∏è'}}
                        </div>
                        <div>
                          –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {{substr($type['–í—Ä–µ–º—è–ù–∞—á–∞–ª–∞'], 0, strlen($type['–í—Ä–µ–º—è–ù–∞—á–∞–ª–∞']) - 3)}} - {{substr($type['–í—Ä–µ–º—è–û–∫–æ–Ω—á–∞–Ω–∏—è'], 0, strlen($type['–í—Ä–µ–º—è–û–∫–æ–Ω—á–∞–Ω–∏—è']) - 3)}}
                        </div>
                        <div>
                          –ü–µ—Ä–µ—Ä—ã–≤: {{substr($type['–ü–µ—Ä–µ—Ä—ã–≤'], 0, strlen($type['–ü–µ—Ä–µ—Ä—ã–≤']) - 3)}}
                        </div>
                      </option>
                    @endforeach
                  </select>
                </div>
              </div>
            </div>


          </div>
          <div class="modal-footer d-flex justify-content-between">
              <button type="button" class="btn btn-danger" id="deleteEvent">–£–¥–∞–ª–∏—Ç—å</button>
              <button class="btn btn-primary" type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
          </div>
        </form>
      </div>
    </div>
  </div>

@endsection

@section('cabinet-page-script')
  <script>

    let eventList = [];

    //–ó–∞–Ω–æ—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ php
    @if(isset(Auth::user()->hrInfo->–û—Ç–ø—É—Å–∫–∞ ))
    @foreach (Auth::user()->hrInfo->–û—Ç–ø—É—Å–∫–∞ as $key => $value)
    @if($value['–ê–∫—Ç–∏–≤–Ω–æ'])
    createEventOtpusk('{{$value['–¢–∏–ø–û—Ç–ø—É—Å–∫–∞']['–ù–∞–∑–≤–∞–Ω–∏–µ']}}', '{{$value['–î–∞—Ç–∞–ù–∞—á–∞–ª–∞']}}', '{{$value['–î–∞—Ç–∞–û–∫–æ–Ω—á–∞–Ω–∏—è']}}', eventList);
    @endif
    @endforeach
    @endif

    @if(isset($preferSchedule))
    @foreach($preferSchedule as $one)
      createWorkDay('{{$one['–î–∞—Ç–∞']}}','{{$one['–î–∞—Ç–∞–û–∫–æ–Ω—á–∞–Ω–∏—è']}}', '{{json_encode($one->–¢–∏–ø–†–∞–±–æ—á–µ–π–°–º–µ–Ω—ã)}}', eventList);
    @endforeach
    @endif

    let calendar;
    let firstDayOfMouth;
    let lastDayOfMouth;
    let workModifier = parseFloat('{{Auth::user()->hrInfo->–°—Ç–∞–≤–∫–∞}}');

    $('#starts-at').on('change', function () {
      $('#ends-at').attr('min', $('#starts-at').val())
    })

    $(document).click(function(event) {
      if (!$(event.target).closest('.fc-scrollgrid tbody td').length) {
        // –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        $('#contextMenu').hide();
      }
    });

    $(function () {
      moment.updateLocale('en', {
        week: {
          dow: 1 // –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
        }
      });

      let calendarEl = document.getElementById('calendar');
      calendar = new FullCalendar.Calendar(calendarEl, {
        views: {
          month: {
            type: 'onemonth',
            duration: {months: 1}
          },
        },
        locale: 'ru',
        themeSystem: 'bootstrap5',
        firstDay: '1',
        multiMonthMaxColumns: 1,
        headerToolbar: {
          end: '',
          right: 'myCustomButton'
        },
        customButtons: {
          myCustomButton: {
            text: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
            class: 'btn btn-primary',
            click: function() {
              saveSchedule();
            }
          },
        },
        eventContent: function (info) {

          let start = moment(info.event.start).format('HH:mm');
          let end = moment(info.event.end).format('HH:mm');
          let durationFrom = '';
          let durationTo = '';
          let eatTime = '';
          if (start !== end) {
            durationFrom = '<div> —Å: ' + moment(info.event.start).format('HH:mm') + '</div>';
            durationTo = '<div> –ø–æ: ' + moment(info.event.end).format('HH:mm') + '</div>';
            eatTime = '<div> –û–±–µ–¥: ' + info.event.extendedProps.description['–ü–µ—Ä–µ—Ä—ã–≤'].substr(0, 5) + ' —á. </div>';
          }

          let title = '<div>' + info.event.title + '</div>';
          let content = '<div class="d-flex flex-column p-1">' + title + durationFrom + durationTo + eatTime + '</div>';
          return {html: content}
        },
        buttonText: {
          today: '–°–µ–≥–æ–¥–Ω—è',
          month: '–ú–µ—Å—è—Ü',
          week: '–ù–µ–¥–µ–ª—è',
          day: '–î–µ–Ω—å',
          list: '–°–ø–∏—Å–æ–∫',
        },
        selectAllow: function (info) {
          $('#contextMenu').hide();
          //–û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—É—â–∏–º –º–µ—Å—è—Ü–µ–º
          if (info.start < firstDayOfMouth || info.end > lastDayOfMouth) {
            return false;
          }
          //–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±–∏—Ä–∞–ª –¥–∏–∞–ø–∞–∑–æ–Ω –±–æ–ª–µ–µ 1 –¥–Ω—è
          if (info.end - info.start <= 86400000) {
            return true;
          }

          return false;
        },

        timeZone: 'local',
        displayEventTime: true,
        displayEventEnd: true,
        selectable: true,
        unselectAuto: true,
        longPressDelay: 0,
        selectOverlap: true,
        events: eventList,
        select: function (selectInfo) {
          let HTMLContent = '<ul class="dropdown-menu dropdown-menu-end p-0 m-0 show" data-bs-popper="static">' +
            '<li onclick="newEvent(\'' + selectInfo.startStr + '\', \'' + selectInfo.endStr + '\')"> <a class="dropdown-item" tabindex="-1" href="#">–î–æ–±–∞–≤–∏—Ç—å —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å</a></li>' +
            '</ul>';

          let rect = selectInfo.jsEvent.changedTouches ? selectInfo.jsEvent.changedTouches[0] : selectInfo.jsEvent;

          $('#contextMenu').css({
            left:  rect.pageX,
            top: rect.pageY
          });
          $('#contextMenu').html(HTMLContent);
          $('#contextMenu').show();

        },
        editable: true,
        eventStartEditable: false,
        eventClick: function(eventData) {
          if(eventData.event.title == '–†–∞–±–æ—á–∏–π –¥–µ–Ω—å'){
            editEvent(eventData);
          }
        }
      });

      calendar.render();
      calendar.next();
      //–°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
      firstDayOfMouth = new Date(calendar.currentData.dateProfile.currentRange.start);
      firstDayOfMouth.setHours(0, 0, 0, 0);
      lastDayOfMouth = new Date(calendar.currentData.dateProfile.currentRange.end);
      lastDayOfMouth.setHours(0, 0, 0, 0);
      calckWorkTime();
      checkEvents();

      $('.fc-myCustomButton-button').removeClass('fc-button fc-button-primary');
      $('.fc-myCustomButton-button').addClass('btn btn-success');
    });

    function newEvent(start) {

      $("#contextMenu").hide();
      $('#newEventModal').modal('show');

      $('#addEventForm').unbind();
      $('#addEventForm').on('submit', function (event) {
        event.preventDefault();

        let selectedOption = $("#workTimeSelect option:selected");
        let startWorkTime = selectedOption.data("info");
        if (!startWorkTime) return;

        // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Å–µ–∫—É–Ω–¥—ã
        const durationInSeconds = (duration) => {
          const timeArray = duration.split(":");
          return parseInt(timeArray[0]) * 3600 + parseInt(timeArray[1]) * 60 + parseInt(timeArray[2]);
        };

        let startDate = new Date(start + 'T' + startWorkTime['–í—Ä–µ–º—è–ù–∞—á–∞–ª–∞']);

        let end = new Date();
        end.setTime(startDate.getTime() + (durationInSeconds(startWorkTime['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å']) + durationInSeconds(startWorkTime['–ü–µ—Ä–µ—Ä—ã–≤'])) * 1000);

        let eventData = {
          title: '–†–∞–±–æ—á–∏–π –¥–µ–Ω—å',
          display: 'block',
          start: startDate,
          end: end,
          className: 'd-flex flex-column',
          backgroundColor: '#3788d8',
          description: startWorkTime
        };

        calendar.addEvent(eventData);
        calckWorkTime();
        checkEvents();
        $('#newEventModal').modal('hide');
      });
    }

    function hideMenu(){}



    function editEvent(eventData) {
      $("#contextMenu").hide();
      $('#workTimeSelect-edit').val(eventData.event.extendedProps.description['–ö–æ–¥']);
      $('#editEventModal').modal('show');


      $('#editEventForm').unbind();
      $('#editEventForm').on('submit', function (event) {
        event.preventDefault();

        let selectedOption = $("#workTimeSelect-edit option:selected");
        let startWorkTime = selectedOption.data("info");
        if (!startWorkTime) return;


        // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Å–µ–∫—É–Ω–¥—ã
        const durationInSeconds = (duration) => {
          const timeArray = duration.split(":");
          return parseInt(timeArray[0]) * 3600 + parseInt(timeArray[1]) * 60 + parseInt(timeArray[2]);
        };

        let startDateStr = moment(eventData.event.start).format('YYYY-MM-DD');
        let startDate = new Date(startDateStr + 'T' + startWorkTime['–í—Ä–µ–º—è–ù–∞—á–∞–ª–∞']);

        let end = new Date();
        end.setTime(startDate.getTime() + (durationInSeconds(startWorkTime['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å']) + durationInSeconds(startWorkTime['–ü–µ—Ä–µ—Ä—ã–≤'])) * 1000);

        let newEventData = {
          title: '–†–∞–±–æ—á–∏–π –¥–µ–Ω—å',
          display: 'block',
          start: startDate,
          end: end,
          className: 'd-flex flex-column',
          backgroundColor: '#3788d8',
          description: startWorkTime
        };

        eventData.event.remove();
        calendar.addEvent(newEventData);
        calendar.render();
        calckWorkTime();
        checkEvents();
        $('#editEventModal').modal('hide');
      });

      $('#deleteEvent').unbind();
      $('#deleteEvent').on('click', function() {
        eventData.event.remove();
        calckWorkTime();
        checkEvents();
        $('#editEventModal').modal('hide');
      });

    }


    function calckWorkTime() {
      let totalSeconds = 0;
      let eventList = getEventsForCurrentMonth();
      for (let i = 0; i < eventList.length; i++) {
        if (eventList[i].title == '–†–∞–±–æ—á–∏–π –¥–µ–Ω—å') {
          // –ù–∞–π—Ç–∏ –æ–±—â–µ–µ –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
          totalSeconds += toSeconds(splitTime(eventList[i].extendedProps.description['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å']));
        }
      }
      const hours = Math.floor(totalSeconds / 3600);
      const minutes = Math.floor((totalSeconds % 3600) / 60);
      const formattedTime = hours.toString() + ':' + minutes.toString().padStart(2, '0');

      let tableValueHtml = $('#normWorkHours').html();
      let [tableHours, tableMinutes] = tableValueHtml.split(':');
      let tableHoursInt = parseInt(tableHours);
      let tableMinutesInt = parseInt(tableMinutes);
      let totalTableSeconds = tableHoursInt * 3600 + tableMinutesInt * 60;
      if(totalSeconds >= totalTableSeconds){
        $('#calckWorkHours').removeClass('text-warning');
        $('#calckWorkHours').addClass('text-success');
        //–¢—É—Ç –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
      }else{
        $('#calckWorkHours').removeClass('text-success');
        $('#calckWorkHours').addClass('text-warning');
      }
      $('#calckWorkHours').html(formattedTime);

    }


    function createEventOtpusk(eventName, dateStart, dateEnd, eventList) {
      eventList.push({
        title: eventName,
        start: dateStart,
        end: dateEnd,
        display: 'block',
        backgroundColor: '#afe872',
      });
    }

    function createWorkDay(dateStart, dateEnd, startWorkTime,  eventList){
      startWorkTime = startWorkTime.replaceAll('&quot;','"');
      startWorkTime = startWorkTime.replaceAll('\'','');

      eventList.push(
        {
          title: '–†–∞–±–æ—á–∏–π –¥–µ–Ω—å',
          display: 'block',
          start: dateStart,
          end: dateEnd,
          className: 'd-flex flex-column',
          backgroundColor: '#3788d8',
          description: JSON.parse(startWorkTime)
        }
      )
    }

    // –†–∞–∑–±–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ —á–∞—Å—ã, –º–∏–Ω—É—Ç—ã –∏ —Å–µ–∫—É–Ω–¥—ã
    function splitTime(time) {
      const [hours, minutes, seconds] = time.split(':');
      return [parseInt(hours), parseInt(minutes), parseInt(seconds)];
    }

    // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ —Å–µ–∫—É–Ω–¥—ã
    function toSeconds(time) {
      const [hours, minutes, seconds] = time;
      return hours * 3600 + minutes * 60 + seconds;
    }

    function getEventsForCurrentMonth(types = []) {

      const view = calendar.currentData.dateProfile.currentRange;
      const intervalStart = view.start;
      intervalStart.setHours(0, 0, 0, 0);

      const intervalEnd = view.end;
      intervalEnd.setHours(24, 0, 0, 0);

      const events = calendar.getEvents();
      const eventsInCurrentMonth = [];
      events.forEach(event => {
        const startDate = moment(event.start);
        const endDate = moment(event.end);

        if (startDate >= intervalStart && endDate <= intervalEnd) {

          if(types.length == 0){
            eventsInCurrentMonth.push(event);
          }else{
              if(types.includes(event.title)){
                eventsInCurrentMonth.push(event);
              }
          }
        }
      });
      eventsInCurrentMonth.sort((a, b) => a.start.valueOf() - b.start.valueOf());
      return eventsInCurrentMonth;
    }


    function checkEvents() {
      let errors = [];
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
      let events = getEventsForCurrentMonth();

      // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å "–†–∞–±–æ—á–∏–π –¥–µ–Ω—å" –∏ "–û—Ç–ø—É—Å–∫"
      events.forEach(event => {
        if (event.title === '–†–∞–±–æ—á–∏–π –¥–µ–Ω—å') {
          events.forEach(otherEvent => {
            if (otherEvent.title === '–û—Ç–ø—É—Å–∫' &&
              event.start < otherEvent.end &&
              otherEvent.start < event.end) {
              errors.push('–û—à–∏–±–∫–∞: –°–æ–±—ã—Ç–∏–µ "–†–∞–±–æ—á–∏–π –¥–µ–Ω—å" –ø–µ—Ä–µ—Å–µ–∫–∞–µ—Ç—Å—è —Å —Å–æ–±—ã—Ç–∏–µ–º "–û—Ç–ø—É—Å–∫".');
              event.setProp('backgroundColor', 'red');
            }
          });
        }
      });

      //–ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏
      events = getEventsForCurrentMonth(['–†–∞–±–æ—á–∏–π –¥–µ–Ω—å']);

      //–°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ü–≤–µ—Ç –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π –≤ —Å–∏–Ω–∏–π
      changeAllEventsColor(events, '#3788d8');
      const weeks = getWeeks(events);

      // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É–º–º–∞—Ä–Ω–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏–π –≤ –Ω–µ–¥–µ–ª–µ
      let weekCount = 1;
      for (let key in weeks) {
        if(weekCount > 5) break;
        let totalDuration = 0;
        weeks[key].forEach(event => {
          totalDuration += toSeconds(splitTime(event.extendedProps.description['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å']));
        });

        let week = moment().week(key)
        let weekStart = week.startOf('week');
        let endofWeek = weekStart.clone().add(7, 'days');
        let endOfMounth = moment(lastDayOfMouth);
        if(endOfMounth < endofWeek){
          endofWeek = endOfMounth;
        }

        let rateWorkHours = 7.8;
        let countOfWeekDays = endofWeek.diff(weekStart, 'days');
        let countOfFreeDays = countOfWeekDays <= 5 ? 0 : countOfWeekDays == 6 ? 1: countOfWeekDays == 7 ? 2 : 0;

        let hoursAtWeek = ((countOfWeekDays - countOfFreeDays) * rateWorkHours) * workModifier;
        let extraHours = 15 * workModifier;

        const totalDurationHours = Math.floor(totalDuration / 3600);
        if (!(0 <= (totalDurationHours - (hoursAtWeek)) && (totalDurationHours - (hoursAtWeek)) <= (extraHours))) {
          errors.push('–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞—Ä–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—á–∏—Ö —Å–º–µ–Ω –Ω–∞ –Ω–µ–¥–µ–ª–µ ' + weekCount + ', –∑–∞–ø–æ–ª–Ω–µ–Ω–æ —á–∞—Å–æ–≤: ' + totalDurationHours + ' –∏–∑ '+(hoursAtWeek)+' + '+(extraHours)+' –≤–æ–∑–º–æ–∂–Ω—ã—Ö –Ω–∞ —Å—Ç–∞–≤–∫—É '+ workModifier + '<i data-toggle="tooltip" data-placement="bottom" title="–ß–∞—Å—ã —Ä–∞—Å—á–∏—Ç–∞–Ω—ã –ø–æ —Ñ–æ—Ä–º—É–ª–µ: (('+countOfWeekDays+' - ' +countOfFreeDays+') * '+rateWorkHours+') * '+workModifier+'" class="bx bx-info-circle mb-1 ms-1 fs-6"></i>');
          weeks[key].forEach(event => {
            event.setProp('backgroundColor', 'red');
          });
        }
        weekCount++;

      }


      // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç—Ä–∏ –ø–æ–¥—Ä—è–¥ —Å–æ–±—ã—Ç–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é 11 –∏ 12 —á–∞—Å–æ–≤
      for (let i = 0; i < events.length - 2; i++) {
        const duration1 = Math.floor(toSeconds(splitTime(events[i].extendedProps.description['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å'])) / 3600);
        const duration2 = Math.floor(toSeconds(splitTime(events[i + 1].extendedProps.description['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å'])) / 3600);
        const duration3 = Math.floor(toSeconds(splitTime(events[i + 2].extendedProps.description['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å'])) / 3600);

        let currentDay = moment(events[i].start);
        let nextDay = moment(events[i+ 1].start);
        let nextNextDay = moment(events[i + 2].start);


        if ((duration1 >= 11) && (duration2 >= 11) && (duration3 >= 11) && nextDay.diff(currentDay, 'days') <= 1 && nextNextDay.diff(nextDay, 'days') <= 1) {
          errors.push('–û—à–∏–±–∫–∞: –¢—Ä–∏ —Ä–∞–±–æ—á–∏–µ —Å–º–µ–Ω—ã —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é 11 –∏–ª–∏ 12 —á–∞—Å–æ–≤ –ø–æ–¥—Ä—è–¥.' + events[i].start);
          events[i].setProp('backgroundColor', 'red');
          events[i + 1].setProp('backgroundColor', 'red');
          events[i + 2].setProp('backgroundColor', 'red');
        }
      }

      // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –ø–æ—Å–ª–µ –Ω–æ—á–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
      events.forEach((event, index) => {
        if (event.extendedProps.description['–ù–æ—á–Ω–∞—è']) {
          if(index + 1 < events.length){
            let currentEvent = moment(event.start);
            let nextEvent = moment(events[index + 1].start);

            if(nextEvent.diff(currentEvent, 'days') <= 1 && events[index + 1].extendedProps.description['–ù–æ—á–Ω–∞—è'] == false){
              errors.push('–û—à–∏–±–∫–∞: –ü–æ—Å–ª–µ –Ω–æ—á–Ω–æ–π —Å–º–µ–Ω—ã —Å—Ç–∞–≤–∏—Ç—å –¥–Ω–µ–≤–Ω—É—é –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ.' + event.start + '  ' + events[index + 1].start + '   '+ nextEvent.diff(currentEvent, 'days'));
              event.setProp('backgroundColor', 'red');
              events[index + 1].setProp('backgroundColor', 'red');
            }
          }
        }
      });

      // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –ø–æ—Å–ª–µ –Ω–æ—á–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
      events.forEach((event, index) => {
        if (index + 1 < events.length && events[index + 1].start.getTime() < event.end.getTime()) {
          errors.push('–û—à–∏–±–∫–∞: –°–º–µ–Ω—ã –Ω–∞–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞');
          event.setProp('backgroundColor', 'red');
          events[index + 1].setProp('backgroundColor', 'red');
        }
      });

      freeHours(events, errors)

      // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ —Å–æ–±—ã—Ç–∏–π –≤ –ø–µ—Ä–≤–æ–π –∏ –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ –º–µ—Å—è—Ü–∞
      const firstHalfEvents = events.filter(event => {
        return event.start.getDate() <= 15;
      });
      const secondHalfEvents = events.filter(event => {
        return event.start.getDate() > 15;
      });
      let firstHalfDuration = 0;
      let secondHalfDuration = 0;
      firstHalfEvents.forEach(event => {
        firstHalfDuration += event.end - event.start;
      });
      secondHalfEvents.forEach(event => {
        secondHalfDuration += event.end - event.start;
      });
      const firstHalfDurationHours = firstHalfDuration / (1000 * 60 * 60);
      const secondHalfDurationHours = secondHalfDuration / (1000 * 60 * 60);
      if (Math.abs(firstHalfDurationHours - secondHalfDurationHours) > 10) {
        errors.push('–û—à–∏–±–∫–∞: –ù–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–±–æ—á–∏—Ö —Å–º–µ–Ω –ø–æ –ø–æ–ª–æ–≤–∏–Ω–∞–º –º–µ—Å—è—Ü–∞.');
      }


      formErrors(errors);
      return errors;
    }

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ —Å–æ–±—ã—Ç–∏–π –ø–æ –Ω–µ–¥–µ–ª—è–º
    function getWeeks(events) {
      const weeks = {}; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç –≤–º–µ—Å—Ç–æ –º–∞—Å—Å–∏–≤–∞
      events.forEach(event => {
        const weekNumber = getWeekNumber(event.startStr);
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–ª—é—á weekNumber –≤ –æ–±—ä–µ–∫—Ç–µ weeks
        if (!weeks[weekNumber]) {
          weeks[weekNumber] = []; // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –¥–ª—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏, –µ—Å–ª–∏ –µ–µ –µ—â–µ –Ω–µ—Ç
        }
        weeks[weekNumber].push(event); // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –º–∞—Å—Å–∏–≤
      });
      return weeks;
    }

    function getWeekNumber(dateString) {
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –æ–±—ä–µ–∫—Ç Date
      const date = moment(dateString);
      // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏
      const weekNumber = date.locale('ru').week();
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏
      return weekNumber;
    }


    function formErrors(errors) {
      $('#calendar-alert').hide();
      let content = '';
      for (let i = 0; i < errors.length; i++) {
        content += '<li>' + errors[i] + '</li>';
      }
      $('#calendar-alert-list').html(content);
      if (errors.length > 0) {
        $('#calendar-alert').show();
      }
    }


    function freeHours(events, errors) {

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü –Ω–µ–¥–µ–ª–∏, –∏—Å—Ö–æ–¥—è –∏–∑ 1 –¥–Ω—è –º–µ—Å—è—Ü–∞
      const currentMonth = moment(firstDayOfMouth).month();

      let weekCount = 1;
      let startWeek = moment().month(currentMonth).date(1).startOf('week');
      let endWeek = startWeek.clone().add(7, 'days');
      while (moment(lastDayOfMouth) > endWeek) {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        let currentTime = startWeek;

        let freeHoursOnWeek = false;

        let weeksEvents = [];

        for (let event of events) {
          // –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ä–∞–Ω—å—à–µ –∫–æ–Ω—Ü–∞ –Ω–µ–¥–µ–ª–∏
          if (moment(event.start).isBefore(endWeek)) {
            // –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
            if (moment(event.start).isAfter(currentTime)) {
              weeksEvents.push(event);
            }
          }
        }

        if(weeksEvents.length  == 0){
          freeHoursOnWeek = true;
        }

        // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Å–æ–±—ã—Ç–∏—é
        for (let wevent of weeksEvents) {
          // –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ä–∞–Ω—å—à–µ –∫–æ–Ω—Ü–∞ –Ω–µ–¥–µ–ª–∏
          if (moment(wevent.start).isBefore(endWeek)) {
            // –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
            if (moment(wevent.start).isAfter(currentTime)) {
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –≤—Ä–µ–º–µ–Ω–∏ –º–µ–∂–¥—É —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –∏ –Ω–∞—á–∞–ª–æ–º —Å–æ–±—ã—Ç–∏—è
              const freeHours = moment(wevent.start).diff(currentTime, 'hours');
              if (freeHours >= 48) {
                freeHoursOnWeek = true;
                break;
              }
            }
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –¥–æ –∫–æ–Ω—Ü–∞ —Å–æ–±—ã—Ç–∏—è
            currentTime = wevent.end;
          }
        }

        let finalCheck =  moment(endWeek).diff(currentTime, 'hours');
        if(finalCheck >= 48){
          freeHoursOnWeek = true;
        }

        if(!freeHoursOnWeek){
          errors.push('–û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ—Ä—ã–≤ 48—á –Ω–∞ –Ω–µ–¥–µ–ª–µ ' + weekCount);
          weeksEvents.forEach(event=>{
              event.setProp('backgroundColor', 'red');
            }
          )
        }

        weekCount++;
        startWeek = endWeek;
        endWeek = startWeek.clone().add(7, 'days');
      }
    }

    function changeAllEventsColor(events, color){

      events.forEach(event => {
        event.setProp('backgroundColor', color);
      });
      calendar.render();
    }


    function saveSchedule(){
      let errors = checkEvents();

      if(errors.length > 0){
        alert('–ü–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≥—Ä–∞—Ñ–∏–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –æ—à–∏–±–∫–∏!');
        return;
      }

      // –ü–æ–ª—É—á–∞–µ–º CSRF-—Ç–æ–∫–µ–Ω –∏–∑ –º–µ—Ç–∞-—Ç–µ–≥–∞
      const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
      let events = calendar.getEvents();

      if(events.length == 0){
        alert('–ü–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ');
        return;
      }

      let data_arr = [];
      events.forEach((item, index)=>{
        data_arr.push({
          'title':item.title,
          'start':item.startStr.substring(0, 10),
          'description':item.extendedProps.description,
        })
      })

      fetch('/profile/save/prefer_schedule', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-TOKEN': csrfToken // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CSRF-—Ç–æ–∫–µ–Ω
        },
        body: JSON.stringify({
          events: data_arr
        })
      })
        .then(response => response.json())
        .then(data => {
          $("#calendar-alert-save-success").show();
          setTimeout(function() {
            $("#calendar-alert-save-success").hide();
          }, 5000); // 5 —Å–µ–∫—É–Ω–¥

        })
        .catch(error => {
          // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
          console.error('–û—à–∏–±–∫–∞:', error);
        });
    }

  </script>

@endsection
